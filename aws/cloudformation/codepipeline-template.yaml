AWSTemplateFormatVersion: "2010-09-09"
Description: "Create a CodePipeline pipeline for an application"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: 'Github'
        Parameters:
          - BranchName
          - RepositoryName
          - GitHubOwner
          - GitHubOAuthToken
          - WebHookNameSuffix
      -
        Label:
          default: 'CodePipeline'
        Parameters:
          - CodePipelineNameSuffix
          - CodePipelineAPPrefix
      -
        Label:
          default: 'CodeBuild'
        Parameters:
          - ProjectNameSuffix
          - ComputeType
          - CodeBuildAPPrefix
      -
        Label:
          default: 'Application Information'
        Parameters:
          - ApName
          - ApNo
          - ApCustodianEmail
Parameters:
  ApNo:
    Description: application serial number
    Type: String
  ApName:
    Description: application name
    Type: String
  ApCustodianEmail:
    Description: email address
    Type: String
  BranchName:
    Description: GitHub branch name
    Type: String
    Default: master
  RepositoryName:
    Description: GitHub repository name
    Type: String
    Default: codepipeline-github
  GitHubOwner:
    Type: String
  GitHubOAuthToken:
    Type: String
    Default: "{{resolve:secretsmanager:github/access_token:SecretString:GitHubSecret}}"
  WebHookNameSuffix:
    Description: The fixed name of webhook for a specific application
    Type: String
    Default: webhook
  ComputeType:
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
    Default: BUILD_GENERAL1_SMALL
    Description: AWS CodeBuild project compute type
    Type: String
  CodePipelineNameSuffix:
    Description: The fixed part in the name of a Codepipeline
    Type: String
    Default: "codepipeline"
  CodePipelineAPPrefix:
    Description: directory for AP on AWS S3
    Type: String
    Default: 'DevSource'
  CodeBuildAPPrefix:
    Description: CodeBuild directory for AP on AWS s3
    Type: String
    Default: 'DevCodeBuild'
  ProjectNameSuffix:
    Description: The fixed part in the name of a CodeBuild project
    Type: String
    Default: 'codebuild'
  DeployEnvironment:
    Description: 'A designated environment where resources are going to be built.'
    ConstraintDescription: 'must specify prod or test.'
    AllowedValues: ['lab', 'prod']
    Type: String
    Default: lab

Mappings:
  EnvMap:
      lab:
          DeployEnv: lab666
      prod:
          DeployEnv: prod666

Resources:
  LambdaSnsTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: !Sub 'Change Set of CloudFormation Stack for ${ApNo}'
      Subscription:
        - 
          Endpoint: !Sub '${ApCustodianEmail}'
          Protocol: email
      Tags: 
        - 
          Key: 'ApNo'
          Value: !Sub '${ApNo}'
      TopicName: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], 'CodePipeline', 'Cfn', 'ChangeSet']]

  AppCodeBuild:
    DependsOn:
      - "CodeBuildServiceRole"
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref 'ApNo', !Ref ProjectNameSuffix]]
      ServiceRole: !Ref CodeBuildServiceRole
      # Cache: LOCAL
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: !Ref ComputeType
        Image: aws/codebuild/standard:2.0
      QueuedTimeoutInMinutes: 15 # mins
      Source:
        BuildSpec: buildspec.yml
        Type: CODEPIPELINE

  ApPipelineWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      Filters:
        - JsonPath: $.ref
          MatchEquals: !Sub 'refs/heads/${BranchName}'
      TargetPipeline: !Ref ApPipeline
      TargetAction: SourceAction
      Name: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref ApNo, !Ref ApName, !Ref WebHookNameSuffix]]
      TargetPipelineVersion: !GetAtt ApPipeline.Version
      RegisterWithThirdParty: true

  ApPipeline:
    DependsOn:
      - 'CodePipelineServiceRole'
      - 'LambdaSnsTopic'
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref 'ApNo', !Ref CodePipelineNameSuffix]]
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !ImportValue CodePipelineArtifactStoreBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: !Sub "${CodePipelineAPPrefix}"
              RunOrder: 1
              Namespace: SourceVariables
        - Name: BuildResources
          Actions:
            - Name: GitPull
              InputArtifacts:
                - Name: !Sub "${CodePipelineAPPrefix}"
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                EnvironmentVariables: "[{\"name\":\"Release_ID\",\"value\":\"#{codepipeline.PipelineExecutionId}\",\"type\":\"PLAINTEXT\"},{\"name\":\"Commit_ID\",\"value\":\"#{SourceVariables.CommitId}\",\"type\":\"PLAINTEXT\"}]"
                ProjectName: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref 'ApNo', !Ref ProjectNameSuffix]]
              OutputArtifacts:
                - Name: !Sub "${CodeBuildAPPrefix}"
              RunOrder: 1
              Namespace: BuildVariables
        - Name: Deploy
          Actions:
            - Name: ChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: !Sub "${CodeBuildAPPrefix}"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                ChangeSetName: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref ApNo, !Ref ApName, 'changeset']]
                RoleArn: !GetAtt CodePipelineServiceRole.Arn
                StackName: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref ApNo, !Ref ApName]]
                TemplatePath: !Join ['', [!Sub '${CodeBuildAPPrefix}', '::outputtemplate.yml']]
              RunOrder: 1
              Namespace: ChangeSetVariables
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                  NotificationArn: !Ref LambdaSnsTopic
                  ExternalEntityLink: !Join
                                        - '' 
                                        - - !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudformation/home?region=${AWS::Region}#/' 
                                          - 'stacks?filteringText=&filteringStatus=in_progress'
                                          - '&viewNested=true&hideStacks=true&stackId='
                  CustomData: !Join
                                - ''
                                - - 'The latest changeset for '
                                  - !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref ApNo, !Ref ApName]]
                                  - 'is waiting for being reviewed.'
              RunOrder: 2
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: !Sub "${CodeBuildAPPrefix}"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref ApNo, !Ref ApName, 'changeset']]
                StackName: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref ApNo, !Ref ApName]]
              RunOrder: 3
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Join
                        - '-'
                        - [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Sub 'start-execution-codepipeline-${ApName}']
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:AddPermission'
                  - 'lambda:RemovePermission'
                  - 'lambda:InvokeFunction'
                  - 'lambda:GetFunction'
                  - 'lambda:ListFunctions'
                  - 'lambda:CreateFunction'
                  - 'lambda:DeleteFunction'
                  - 'lambda:GetFunctionConfiguration'
                  - 'lambda:UpdateFunctionCode'
                  - 'lambda:ListTags'
                  - 'lambda:TagResource'
                  - 'lambda:UntagResource'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                  - 'iam:GetRole'
                  - 'iam:CreateRole'
                  - 'iam:AttachRolePolicy'
                  - 'iam:DetachRolePolicy'
                  - 'iam:DeleteRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                  - 'apigateway:*'
                Resource: '*'
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      Description: !Sub "Used in CodeBuild project. Created by CloudFormation ${AWS::StackId}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref ApNo]]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
                - 'logs:CreateLogGroup'
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource:
                - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
            - Effect: Allow
              Action:
                - 's3:GetObject'
                - 's3:GetObjectVersion'
                - 's3:PutObject'
                - 's3:PutObjectAcl'
              Resource:
                - !Join ['', ['arn:aws:s3:::', !ImportValue CodePipelineArtifactStoreBucket, '/*']]
Outputs:
  ApPipelineName:
    Description: The name of the CodePipeline
    Value: !Ref ApPipeline
  ApWebHookName:
    Description: The name of the webhook for this AP
    Value: !Ref ApPipelineWebhook
  CodePipelineStackName:
    Description: The name of the CodePipeline for the AP
    Value: !Sub '${AWS::StackName}'
  CodePipelineName:
    Value: !Ref ApPipeline
  CodePipelineVersion:
    Value: !GetAtt ApPipeline.Version
  CodeBuildAPPrefix:
    Description: The name of artifact name for CodeBuild
    Value: !Sub "${CodeBuildAPPrefix}"
  ApStackName:
    Description: The name of the stack for AP
    Value: !Join ['-', [!FindInMap [EnvMap, !Ref DeployEnvironment, DeployEnv], !Ref ApNo, !Ref ApName]]